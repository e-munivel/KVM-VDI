// @generated by protoc-gen-es v1.0.0
// @generated from file operations/v1/operations.proto (package operations.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * OperationState are the different states that a operation can be
 *
 * @generated from enum operations.v1.OperationState
 */
export declare enum OperationState {
  /**
   * default zero value
   *
   * @generated from enum value: OPERATION_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * OPERATION_STATE_SCHEDULED means that the operation is queued, and it's going to be ran when it's its time
   *
   * @generated from enum value: OPERATION_STATE_SCHEDULED = 1;
   */
  SCHEDULED = 1,

  /**
   * OPERATION_STATE_ACTIVE means that the operation is being executed
   *
   * @generated from enum value: OPERATION_STATE_ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * OPERATION_STATE_FAILED means the operation has failed
   *
   * @generated from enum value: OPERATION_STATE_FAILED = 3;
   */
  FAILED = 3,

  /**
   * OPERATION_STATE_COMPLETED means the operation has finished successfully
   *
   * @generated from enum value: OPERATION_STATE_COMPLETED = 4;
   */
  COMPLETED = 4,
}

/**
 * HypervisorCapabilites are the different capabilites that a hypervisor can have
 *
 * @generated from enum operations.v1.HypervisorCapabilities
 */
export declare enum HypervisorCapabilities {
  /**
   * default zero value
   *
   * @generated from enum value: HYPERVISOR_CAPABILITIES_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * HYPERVISOR_CAPABILITIES_STORAGE means the hypervisor has access to the shared storage pool
   *
   * @generated from enum value: HYPERVISOR_CAPABILITIES_STORAGE = 1;
   */
  STORAGE = 1,

  /**
   * HYPERVISOR_CAPABILITIES_GPU means the hypervisor has access to a GPU
   *
   * @generated from enum value: HYPERVISOR_CAPABILITIES_GPU = 2;
   */
  GPU = 2,
}

/**
 * HypervisorState are the different states that a operations hypervisor can be
 *
 * @generated from enum operations.v1.HypervisorState
 */
export declare enum HypervisorState {
  /**
   * default zero value
   *
   * @generated from enum value: HYPERVISOR_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * HYPERVISOR_STATE_UNKNOWN
   *
   * @generated from enum value: HYPERVISOR_STATE_UNKNOWN = 1;
   */
  UNKNOWN = 1,

  /**
   * HYPERVISOR_STATE_AVAILABLE_TO_CREATE means the hypervisor can be created
   *
   * @generated from enum value: HYPERVISOR_STATE_AVAILABLE_TO_CREATE = 2;
   */
  AVAILABLE_TO_CREATE = 2,

  /**
   * HYPERVISOR_STATE_AVAILABLE_TO_DESTROY means the hypervisor can be destroyed
   *
   * @generated from enum value: HYPERVISOR_STATE_AVAILABLE_TO_DESTROY = 3;
   */
  AVAILABLE_TO_DESTROY = 3,
}

/**
 * ListHypervisorsRequest is the request for the ListHypervisors method
 *
 * @generated from message operations.v1.ListHypervisorsRequest
 */
export declare class ListHypervisorsRequest extends Message<ListHypervisorsRequest> {
  constructor(data?: PartialMessage<ListHypervisorsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "operations.v1.ListHypervisorsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListHypervisorsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListHypervisorsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListHypervisorsRequest;

  static equals(a: ListHypervisorsRequest | PlainMessage<ListHypervisorsRequest> | undefined, b: ListHypervisorsRequest | PlainMessage<ListHypervisorsRequest> | undefined): boolean;
}

/**
 * ListHypervisorsResponse is the response for the ListHypervisors method
 *
 * @generated from message operations.v1.ListHypervisorsResponse
 */
export declare class ListHypervisorsResponse extends Message<ListHypervisorsResponse> {
  /**
   * hypervisors contains all the hypervisors in the operations service
   *
   * @generated from field: repeated operations.v1.ListHypervisorsResponseHypervisor hypervisors = 1;
   */
  hypervisors: ListHypervisorsResponseHypervisor[];

  constructor(data?: PartialMessage<ListHypervisorsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "operations.v1.ListHypervisorsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListHypervisorsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListHypervisorsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListHypervisorsResponse;

  static equals(a: ListHypervisorsResponse | PlainMessage<ListHypervisorsResponse> | undefined, b: ListHypervisorsResponse | PlainMessage<ListHypervisorsResponse> | undefined): boolean;
}

/**
 * ListHypervisorsResponseHypervisor is each hypervisor in the response of the ListHypervisors method
 *
 * @generated from message operations.v1.ListHypervisorsResponseHypervisor
 */
export declare class ListHypervisorsResponseHypervisor extends Message<ListHypervisorsResponseHypervisor> {
  /**
   * id is the ID of the hypervisor
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * cpu is the number of CPU threads that the machine has
   *
   * @generated from field: int32 cpu = 2;
   */
  cpu: number;

  /**
   * ram is the number of RAM that the machine has. It's in MB
   *
   * @generated from field: int32 ram = 3;
   */
  ram: number;

  /**
   * capabilities are the capabilities that the hypervisor has
   *
   * @generated from field: repeated operations.v1.HypervisorCapabilities capabilities = 4;
   */
  capabilities: HypervisorCapabilities[];

  /**
   * state is the state of the hypervisor
   *
   * @generated from field: operations.v1.HypervisorState state = 5;
   */
  state: HypervisorState;

  constructor(data?: PartialMessage<ListHypervisorsResponseHypervisor>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "operations.v1.ListHypervisorsResponseHypervisor";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListHypervisorsResponseHypervisor;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListHypervisorsResponseHypervisor;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListHypervisorsResponseHypervisor;

  static equals(a: ListHypervisorsResponseHypervisor | PlainMessage<ListHypervisorsResponseHypervisor> | undefined, b: ListHypervisorsResponseHypervisor | PlainMessage<ListHypervisorsResponseHypervisor> | undefined): boolean;
}

/**
 * CreateHypervisorRequest is the request for the CreateHypervisor method
 *
 * @generated from message operations.v1.CreateHypervisorRequest
 */
export declare class CreateHypervisorRequest extends Message<CreateHypervisorRequest> {
  /**
   * id is the ID of the hypervisor
   *
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<CreateHypervisorRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "operations.v1.CreateHypervisorRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateHypervisorRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateHypervisorRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateHypervisorRequest;

  static equals(a: CreateHypervisorRequest | PlainMessage<CreateHypervisorRequest> | undefined, b: CreateHypervisorRequest | PlainMessage<CreateHypervisorRequest> | undefined): boolean;
}

/**
 * CreateHypervisorResponse is the response for the CreateHypervisor method
 *
 * @generated from message operations.v1.CreateHypervisorResponse
 */
export declare class CreateHypervisorResponse extends Message<CreateHypervisorResponse> {
  /**
   * state is the state of the operation
   *
   * @generated from field: operations.v1.OperationState state = 1;
   */
  state: OperationState;

  /**
   * msg contains info related with the operation
   *
   * @generated from field: string msg = 2;
   */
  msg: string;

  constructor(data?: PartialMessage<CreateHypervisorResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "operations.v1.CreateHypervisorResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateHypervisorResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateHypervisorResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateHypervisorResponse;

  static equals(a: CreateHypervisorResponse | PlainMessage<CreateHypervisorResponse> | undefined, b: CreateHypervisorResponse | PlainMessage<CreateHypervisorResponse> | undefined): boolean;
}

/**
 * DestroyHypervisorRequest is the request for the DestroyHypervisor method
 *
 * @generated from message operations.v1.DestroyHypervisorRequest
 */
export declare class DestroyHypervisorRequest extends Message<DestroyHypervisorRequest> {
  /**
   * id is the ID of the hypervisor
   *
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DestroyHypervisorRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "operations.v1.DestroyHypervisorRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DestroyHypervisorRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DestroyHypervisorRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DestroyHypervisorRequest;

  static equals(a: DestroyHypervisorRequest | PlainMessage<DestroyHypervisorRequest> | undefined, b: DestroyHypervisorRequest | PlainMessage<DestroyHypervisorRequest> | undefined): boolean;
}

/**
 * DestroyHypervisorResponse is the response for the DestroyHypervisor method
 *
 * @generated from message operations.v1.DestroyHypervisorResponse
 */
export declare class DestroyHypervisorResponse extends Message<DestroyHypervisorResponse> {
  /**
   * state is the state of the operation
   *
   * @generated from field: operations.v1.OperationState state = 1;
   */
  state: OperationState;

  /**
   * msg contains info related with the operation
   *
   * @generated from field: string msg = 2;
   */
  msg: string;

  constructor(data?: PartialMessage<DestroyHypervisorResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "operations.v1.DestroyHypervisorResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DestroyHypervisorResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DestroyHypervisorResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DestroyHypervisorResponse;

  static equals(a: DestroyHypervisorResponse | PlainMessage<DestroyHypervisorResponse> | undefined, b: DestroyHypervisorResponse | PlainMessage<DestroyHypervisorResponse> | undefined): boolean;
}

/**
 * ExpandStorageRequest is the request for the ExpandStorage method
 *
 * @generated from message operations.v1.ExpandStorageRequest
 */
export declare class ExpandStorageRequest extends Message<ExpandStorageRequest> {
  /**
   * min_bytes is the minimum number of bytes that the storage needs to be expanded
   *
   * @generated from field: int32 min_bytes = 1;
   */
  minBytes: number;

  constructor(data?: PartialMessage<ExpandStorageRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "operations.v1.ExpandStorageRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpandStorageRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpandStorageRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpandStorageRequest;

  static equals(a: ExpandStorageRequest | PlainMessage<ExpandStorageRequest> | undefined, b: ExpandStorageRequest | PlainMessage<ExpandStorageRequest> | undefined): boolean;
}

/**
 * ExpandStorageResponse is the response for the ExpandStorage method
 *
 * @generated from message operations.v1.ExpandStorageResponse
 */
export declare class ExpandStorageResponse extends Message<ExpandStorageResponse> {
  /**
   * state is the state of the operation
   *
   * @generated from field: operations.v1.OperationState state = 1;
   */
  state: OperationState;

  /**
   * msg contains info related with the operation
   *
   * @generated from field: string msg = 2;
   */
  msg: string;

  constructor(data?: PartialMessage<ExpandStorageResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "operations.v1.ExpandStorageResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpandStorageResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpandStorageResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpandStorageResponse;

  static equals(a: ExpandStorageResponse | PlainMessage<ExpandStorageResponse> | undefined, b: ExpandStorageResponse | PlainMessage<ExpandStorageResponse> | undefined): boolean;
}

/**
 * ShrinkStorageRequest is the request for the ShrinkStorage method
 *
 * @generated from message operations.v1.ShrinkStorageRequest
 */
export declare class ShrinkStorageRequest extends Message<ShrinkStorageRequest> {
  /**
   * max_bytes is the maximum number of bytes that the storage needs to be shrink
   *
   * @generated from field: int32 max_bytes = 1;
   */
  maxBytes: number;

  constructor(data?: PartialMessage<ShrinkStorageRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "operations.v1.ShrinkStorageRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShrinkStorageRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShrinkStorageRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShrinkStorageRequest;

  static equals(a: ShrinkStorageRequest | PlainMessage<ShrinkStorageRequest> | undefined, b: ShrinkStorageRequest | PlainMessage<ShrinkStorageRequest> | undefined): boolean;
}

/**
 * ShrinkStorageResponse is the response for the ShrinkStorage method
 *
 * @generated from message operations.v1.ShrinkStorageResponse
 */
export declare class ShrinkStorageResponse extends Message<ShrinkStorageResponse> {
  /**
   * state is the state of the operation
   *
   * @generated from field: operations.v1.OperationState state = 1;
   */
  state: OperationState;

  /**
   * msg contains info related with the operation
   *
   * @generated from field: string msg = 2;
   */
  msg: string;

  constructor(data?: PartialMessage<ShrinkStorageResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "operations.v1.ShrinkStorageResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShrinkStorageResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShrinkStorageResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShrinkStorageResponse;

  static equals(a: ShrinkStorageResponse | PlainMessage<ShrinkStorageResponse> | undefined, b: ShrinkStorageResponse | PlainMessage<ShrinkStorageResponse> | undefined): boolean;
}

/**
 * CreateBackupRequest is the request for the CreateBackup method
 *
 * @generated from message operations.v1.CreateBackupRequest
 */
export declare class CreateBackupRequest extends Message<CreateBackupRequest> {
  constructor(data?: PartialMessage<CreateBackupRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "operations.v1.CreateBackupRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateBackupRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateBackupRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateBackupRequest;

  static equals(a: CreateBackupRequest | PlainMessage<CreateBackupRequest> | undefined, b: CreateBackupRequest | PlainMessage<CreateBackupRequest> | undefined): boolean;
}

/**
 * CreateBackupResponse is the response for the CreateBackup method
 *
 * @generated from message operations.v1.CreateBackupResponse
 */
export declare class CreateBackupResponse extends Message<CreateBackupResponse> {
  /**
   * state is the state of the operation
   *
   * @generated from field: operations.v1.OperationState state = 1;
   */
  state: OperationState;

  /**
   * msg contains info related with the operation
   *
   * @generated from field: string msg = 2;
   */
  msg: string;

  constructor(data?: PartialMessage<CreateBackupResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "operations.v1.CreateBackupResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateBackupResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateBackupResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateBackupResponse;

  static equals(a: CreateBackupResponse | PlainMessage<CreateBackupResponse> | undefined, b: CreateBackupResponse | PlainMessage<CreateBackupResponse> | undefined): boolean;
}

